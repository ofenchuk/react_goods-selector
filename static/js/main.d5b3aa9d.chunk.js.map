{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","selected","handleButton","item","setState","className","this","type","onClick","map","isSelected","classNames","Component","ReactDOM","render","document","getElementById"],"mappings":"2PAWaA,EAAgB,CAC3B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAIWC,EAAb,4MACEC,MAAe,CACbC,SAAU,OAFd,EAKEC,aAAe,SAACC,GAAD,OAAkB,WAC/B,EAAKC,SAAS,CAAEH,SAAUE,MAN9B,4CASE,WAAU,IAAD,OACP,OACE,uBAAME,UAAU,oBAAhB,UACE,qBAAIA,UAAU,sCAAd,UACGC,KAAKN,MAAMC,SAAX,UACMK,KAAKN,MAAMC,SADjB,gBAEG,oBAEHK,KAAKN,MAAMC,UAEV,wBACE,UAAQ,cACRM,KAAK,SACLF,UAAU,cACVG,QAASF,KAAKJ,aAAa,SAKjC,uBAAOG,UAAU,QAAjB,SACE,gCACGP,EAAMW,KAAI,SAACN,GACV,IAAMO,EAAa,EAAKV,MAAMC,WAAaE,EAE3C,OACE,qBAEE,UAAQ,OACRE,UAAWM,IAAW,CACpB,+BAAgCD,IAJpC,UAOE,6BACGA,EACC,wBACE,UAAQ,eACRH,KAAK,SACLF,UAAU,iBACVG,QAAS,EAAKN,aAAa,IAJ7B,eASA,wBACE,UAAQ,YACRK,KAAK,SACLF,UAAU,SACVG,QAAS,EAAKN,aAAaC,GAJ7B,iBAWJ,oBAAI,UAAQ,YAAYE,UAAU,eAAlC,SACGF,MA7BEA,iBAnCvB,GAAyBS,aCtBzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d5b3aa9d.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\ntype Good = string;\n\ninterface State {\n  selected: string;\n}\n\nexport const goods: Good[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\n// eslint-disable-next-line react/prefer-stateless-function\nexport class App extends Component {\n  state: State = {\n    selected: 'Jam',\n  };\n\n  handleButton = (item: string) => () => {\n    this.setState({ selected: item });\n  };\n\n  render() {\n    return (\n      <main className=\"section container\">\n        <h1 className=\"title is-flex is-align-items-center\">\n          {this.state.selected\n            ? `${this.state.selected} is selected`\n            : 'No goods selected'}\n\n          {this.state.selected && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"ClearButton\"\n              type=\"button\"\n              className=\"delete ml-3\"\n              onClick={this.handleButton('')}\n            />\n          )}\n        </h1>\n\n        <table className=\"table\">\n          <tbody>\n            {goods.map((item: string) => {\n              const isSelected = this.state.selected === item;\n\n              return (\n                <tr\n                  key={item}\n                  data-cy=\"Good\"\n                  className={classNames({\n                    'has-background-success-light': isSelected,\n                  })}\n                >\n                  <td>\n                    {isSelected ? (\n                      <button\n                        data-cy=\"RemoveButton\"\n                        type=\"button\"\n                        className=\"button is-info\"\n                        onClick={this.handleButton('')}\n                      >\n                        -\n                      </button>\n                    ) : (\n                      <button\n                        data-cy=\"AddButton\"\n                        type=\"button\"\n                        className=\"button\"\n                        onClick={this.handleButton(item)}\n                      >\n                        +\n                      </button>\n                    )}\n                  </td>\n\n                  <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                    {item}\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}